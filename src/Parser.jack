class Parser{

    function boolean canParse(String input){
        var String valid_chars, valid_chars_after_x, symbol;
        var int i, length;
        var boolean result;

        let valid_chars = "+-^xX0123456789";
        let valid_chars_after_x = "+-^";
        let i = 0;
        let input = StringMethods.replace(input, " ", "");
        let length = input.length();
        if (length = 0){
            return false;
        }
        let symbol = "a";
        while (i < length){
            do symbol.setCharAt(0, input.charAt(i));
            if (~(StringMethods.contains(valid_chars, symbol))){
                return false;
            }
            if ((StringMethods.equals(symbol, "x")) & (i < (length - 1))){
                do symbol.setCharAt(0, input.charAt(i + 1));
                if (~(StringMethods.contains(valid_chars_after_x, symbol))){
                    return false;
                }
            }
            let i = i + 1;
        }
        do valid_chars.dispose();
        do valid_chars_after_x.dispose();
        do symbol.dispose();
        return true;
    }
  
    function Array parseTerm(String termStr){
        var Term term;
        var Array parts;
        var String str;
        var int multiplier, degree, i;

        let multiplier = 0;
        let degree = 0;
        let i = 0;
        let termStr = StringMethods.replace(termStr, "X", "x");
        let termStr = StringMethods.replace(termStr, "-x", "-1x");
        if (StringMethods.contains(termStr, "x")){
            if (StringMethods.contains(termStr, "x^")){
                let parts = StringMethods.split(termStr, "x^");
                let str = parts[1];
                let degree = str.intValue();
            }
            else{
                let parts = StringMethods.split(termStr, "x");
                let str = parts[1];
                let degree = 1;
            }
            let str = parts[0];
            if(str.length() = 0){
                let multiplier = 1;
            }
            else{
                let multiplier = str.intValue();
            }
        }
        else{
            let multiplier = termStr.intValue();
        }
        let term = Term.new(multiplier, degree);
        do parts.dispose();
        do str.dispose();
        return term;
    }

    function Array parse(String input){
        var Term term;
        var Array terms, result;
        var IntList result_list;
        var String termStr, str;
        var int multiplier, degree, i, terms_len, result_len;

        let result_list = IntList.new();
        let result_len = 0;
        let str = StringMethods.replace(input, " ", "");
        let str = StringMethods.replace(str, "-", "+-");
        let terms_len = StringMethods.count(str, "+") + 1;
        let terms = StringMethods.split(str, "+");
        let i = 0;
        let result_len = 0;
        while(i < terms_len){
            let termStr = terms[i];
            if (termStr.length() > 0){
                let term = Parser.parseTerm(termStr);
                let multiplier = term.getMultiplier();
                let degree = term.getDegree();
                while(~(degree < result_len)){
                    do result_list.add(0);
                    let result_len = result_len + 1;
                }
                let multiplier = multiplier + result_list.takeAtIndex(degree);
                do result_list.changeAtIndex(degree, multiplier);
            }
            let i = i + 1;
        }
        let result = result_list.toArray();
        do term.dispose();
        do terms.dispose();
        do result_list.dispose();
        do termStr.dispose();
        do str.dispose();
        return result;
    }

    function ModifiedArray parseToModifiedArray ( String input ) {
        var Term term;
        var Array terms;
        var ModifiedArray result;
        var IntList result_list;
        var String termStr, str;
        var int multiplier, degree, i, terms_len, result_len;

        let result_list = IntList.new();
        let result_len = 0;
        let str = StringMethods.replace(input, " ", "");
        let str = StringMethods.replace(str, "-", "+-");
        let terms_len = StringMethods.count(str, "+") + 1;
        let terms = StringMethods.split(str, "+");
        let i = 0;
        let result_len = 0;
        while(i < terms_len){
            let termStr = terms[i];
            if (termStr.length() > 0){
                let term = Parser.parseTerm(termStr);
                let degree = term.getDegree();
                let multiplier = term.getMultiplier();
                while(~(degree < result_len)){
                    do result_list.add(0);
                    let result_len = result_len + 1;
                }
                let multiplier = multiplier + result_list.takeAtIndex(degree);
                do result_list.changeAtIndex(degree, multiplier);
            }
            let i = i + 1;
        }
        let result = result_list.toModifiedArray();
        do term.dispose();
        do terms.dispose();
        do result_list.dispose();
        do termStr.dispose();
        do str.dispose();
        return result;
    }
}